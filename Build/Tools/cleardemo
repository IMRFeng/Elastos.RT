#!/bin/bash

THIS_SCRIPT=$(basename $0)
usage()
{
    cat << EOF

Deploy Eco targets to a directory

Usage: ${THIS_SCRIPT} [options]

Options:
  -h, --help
      Print this message

  -m, --module-name <MODULE_NAME>
      Indicate module name

  -i, --interface-name <INTERFACE_NAME>
      Indicate interface name in car file

  -c, --class-name <CLASS_NAME>
      Indicate class name in car file
EOF

}

# Deafult output directory
SERVER_DIR=$XDK_ROOT/Sources/Sample/GenerateJava/GenerateJavaServer/app
CLIENT_DIR=$XDK_ROOT/Sources/Sample/GenerateJava/GenerateJavaClient/app

while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    -h|--help)
        usage
        exit 0
        ;;
    -m|--module-name)
        MODULE_NAME="$2"
        shift # past argument
        shift # past value
        ;;
    -i|--interface-name)
        INTERFACE_NAME="$2"
        shift # past argument
        shift # past value
        ;;
    -c|--class-name)
        CLASS_NAME="$2"
        shift # past argument
        shift # past value
        ;;
    *)    # unknown option
        usage
        exit 1
        ;;
esac
done

if [ "$XDK_ROOT" = "" ] || [ "$XDK_TARGETS" = "" ]; then
    echo "ERROR: Please \"source Elastos.RT/Setup/SetEnv.sh\" to enter one of the building environment."
    echo
    exit 1
fi

if [ ! -d "$XDK_TARGETS" ]; then
    echo "ERROR: Please build the Elastos Runtime project before calling \"cleardemo\"."
    echo
    exit 1
fi

if [ "$MODULE_NAME" = "" ]; then
    echo "ERROR: Please input module name by -m MODULE_NAME."
    echo
    exit 1
fi

if [ "$INTERFACE_NAME" = "" ]; then
    echo "ERROR: Please input interface name declared in car file by -m INTERFACE_NAME."
    echo
    exit 1
fi

if [ "$CLASS_NAME" = "" ]; then
    echo "ERROR: Please input class name declared in car file by -m CLASS_NAME."
    echo
    exit 1
fi

SERVER_JAVA_PATH=$SERVER_DIR/src/main/java/org/elastos/$MODULE_NAME
SERVER_CPP_PATH=$SERVER_DIR/src/main/cpp

CLIENT_CPP_PATH=$CLIENT_DIR/src/main/cpp


SDK_INCLUDE_PATH=$ELASTOS_SDK_PATH/include
SDK_LIBS_PATH=$ELASTOS_SDK_PATH/libs

echo "clear android demo app ..."

delete_so()
{
    echo "Delete lib$MODULE_NAME.so ..."
    rm $SERVER_CPP_PATH/elastos/libs/armeabi-v7a/lib$MODULE_NAME.so
    rm $CLIENT_CPP_PATH/elastos/libs/armeabi-v7a/lib$MODULE_NAME.so
}

delete_inc()
{
    echo "Delete $MODULE_NAME.h ..."
    rm $SERVER_CPP_PATH/elastos/include/$MODULE_NAME.h
    rm $CLIENT_CPP_PATH/elastos/include/$MODULE_NAME.h
}

delete_java()
{
    echo "Delete $INTERFACE_NAME.java ..."
    rm $SERVER_JAVA_PATH/$INTERFACE_NAME.java
    echo "Delete $CLASS_NAME.java ..."
    rm $SERVER_JAVA_PATH/$CLASS_NAME.java
}

delete_cpp()
{
    echo "Delete ${CLASS_NAME}_jni.cpp ..."
    rm $SERVER_CPP_PATH/${CLASS_NAME}_jni.cpp
    echo "Delete ${MODULE_NAME}_jnionload.cpp ..."
    rm $SERVER_CPP_PATH/${MODULE_NAME}_jnionload.cpp
}

delete_cmake()
{
    echo "Delete $MODULE_NAME.cmake ..."
    rm $SERVER_DIR/$MODULE_NAME.cmake
}

delete_inc

delete_so

delete_java

delete_cpp

delete_cmake

echo "Done"
